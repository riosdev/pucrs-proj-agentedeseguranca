(define (domain agenteDeSeguranca)
    (:requirements :strips)
    (:predicates (Em ?loc) (Sala ?loc) (Janela ?jan) (Luz ?luz) (Porta ?por)
                 (TemAcesso ?loc ?por ?loc) (Aberta ?jan) (Acesa ?luz) 
                 (Fechada ?jan) (Apagada ?luz) (Pertence ?jan ?loc) )
    
    (:action mover  :parameters (?loc1 ?por ?loc2)
                    :precondition (and (Em ?loc1) (Sala ?loc1) (Sala ?loc2)
                    (Porta ?por) (Aberta ?por) (or (TemAcesso ?por ?loc1 ?loc2) 
                    (TemAcesso ?por ?loc2 ?loc1)) )
                    :effect (and (Em ?loc2) (not (Em ?loc1)) )
    )
    
    (:action acenderLuz :parameters (?luz ?loc)
                        :precondition (and (Luz ?luz) (Sala ?loc) (Em ?loc)
                        (Apagada ?luz) (Pertence ?luz ?loc) )
                        :effect (and (Acesa ?luz) (not (Apagada ?luz)) )
    )
    
    (:action apagarLuz :parameters (?luz ?loc)
                       :precondition (and (Luz ?luz) (Sala ?loc) (Em ?loc)
                       (Acesa ?luz) (Pertence ?luz ?loc) )
                       :effect (and (Apagada ?luz) (not (Acesa ?luz)) )
    )
    
    (:action fecharJanela :parameters (?jan ?luz ?loc)
                          :precondition(and (Janela ?jan) (Sala ?loc) (Em ?loc) 
                          (Aberta ?jan) (Luz ?luz) (Acesa ?luz) 
                          (Pertence ?jan ?loc) )
                          :effect (and (Fechada ?jan) (not (Aberta ?jan)) )
    )
    
    (:action fecharPorta :parameters (?por ?loc)
                          :precondition(and (Porta ?por) (Em ?loc) 
                          (Aberta ?por) )
                          :effect (and (Fechada ?por) (not (Aberta ?por)) )
    )
)